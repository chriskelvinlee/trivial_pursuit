#!/usr/bin/env python
# encoding: utf-8
"""
plot.py

Created by Christopher K. Lee on 2011-12-07.
Copyright (c) 2011 __MyCompanyName__. All rights reserved.
"""

import sys
import os
import matplotlib

"""
Show how to modify the coordinate formatter to report the image "z"
value of the nearest pixel given x and y
"""
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.cm as cm


colors_rgb = [[1.0, 0.38823529411764707, 0.2784313725490196],
                [0.9803921568627451, 0.4666666666666667, 0.37254901960784315],
                [0.9411764705882353, 0.6235294117647059, 0.5607843137254902],
                [0.8666666666666667, 0.9333333333333333, 0.9333333333333333],
                [0.5294117647058824, 0.6901960784313725, 0.803921568627451],
                [0.3607843137254902, 0.5686274509803921, 0.7372549019607844],
                [0.27450980392156865, 0.5098039215686274, 0.7058823529411765]]                
            
colors_rgb1 = [[0.6392156862745098, 0.6627450980392157, 1.0], [0.6392156862745098, 0.7843137254901961, 1.0], [0.6352941176470588, 0.8431372549019608, 1.0], [0.4392156862745098, 0.6470588235294118, 0.8156862745098039], [0.3215686274509804, 0.5294117647058824, 0.6980392156862745], [0.24313725490196078, 0.45098039215686275, 0.6196078431372549], [0.16470588235294117, 0.37254901960784315, 0.5411764705882353]]
    

norm1 = [[77,50,42,61,48,40,42,51,50,62,62,50,51,40,76,62,58,36,62,65,48,49,42,42,74,50,46,72,57,49,23,49,50,50,47,71],
[50,50,50,40,50,40,50,50,51,48,50,50,53,40,54,50,50,50,50,40,40,51,50,50,50,50,46,40,50,50,50,50,50,50,47,50],
[61,51,40,54,45,40,40,44,53,48,48,50,47,40,54,66,31,48,48,54,51,51,40,40,99,51,46,53,73,46,33,48,51,48,47,58],
[99,51,40,53,51,40,40,48,48,99,51,50,48,40,99,66,52,48,52,99,52,47,40,40,99,51,44,99,48,48,11,99,51,51,46,77],
[99,50,40,99,49,40,40,62,48,51,99,50,56,40,99,68,99,0,99,68,51,49,40,40,50,50,50,99,55,52,0,0,50,52,48,99]]

norm = [[77, 50, 42, 61, 48, 40, 42, 51, 50, 62, 62, 50, 51, 40, 76, 62, 58, 36, 62, 65, 48, 49, 42, 42, 74, 50, 46, 72, 57, 49, 24, 49, 50, 50, 47, 71, 41, 45, 40, 50, 66, 42, 53, 44, 51, 36, 60, 40, 48, 42, 41, 63, 49, 50, 75, 53, 68, 27, 55, 45, 55, 76, 39, 57, 54, 42, 50, 64, 63, 78, 40, 66, 51, 67, 60, 69, 49, 85, 40, 53, 57, 86, 48, 42, 49, 65, 62, 76, 42, 50],
[50, 50, 50, 40, 50, 40, 50, 50, 51, 48, 50, 50, 53, 40, 54, 50, 50, 50, 50, 40, 40, 51, 50, 50, 50, 50, 46, 40, 50, 50, 50, 50, 50, 50, 47, 50, 47, 36, 40, 50, 53, 50, 54, 47, 50, 42, 40, 40, 40, 50, 50, 50, 48, 50, 48, 50, 55, 50, 53, 47, 54, 40, 40, 50, 47, 50, 52, 52, 50, 50, 40, 55, 52, 50, 50, 50, 48, 50, 40, 55, 56, 50, 47, 50, 48, 48, 40, 40, 50, 50],
[61, 51, 40, 54, 45, 40, 40, 44, 53, 48, 48, 50, 47, 40, 54, 66, 31, 48, 48, 54, 51, 51, 40, 40, 99, 51, 46, 53, 73, 46, 33, 48, 51, 48, 47, 58, 36, 51, 40, 48, 53, 40, 51, 46, 55, 48, 66, 40, 51, 40, 46, 53, 48, 48, 54, 54, 64, 41, 53, 47, 54, 68, 33, 99, 53, 40, 47, 52, 46, 64, 40, 55, 1, 62, 46, 58, 48, 95, 40, 51, 56, 99, 47, 40, 51, 48, 51, 75, 40, 48],
[99, 51, 40, 53, 51, 40, 40, 48, 48, 99, 51, 50, 48, 40, 99, 66, 52, 48, 52, 99, 52, 47, 40, 40, 99, 51, 44, 99, 48, 48, 13, 99, 51, 51, 46, 77, 33, 48, 40, 54, 99, 40, 55, 44, 52, 1, 69, 40, 53, 40, 48, 52, 51, 48, 99, 59, 99, 0, 60, 40, 54, 99, 51, 40, 57, 40, 56, 56, 99, 99, 40, 99, 99, 59, 47, 99, 47, 99, 40, 56, 56, 99, 51, 40, 47, 66, 99, 99, 40, 48],
[99, 50, 40, 99, 49, 40, 40, 62, 48, 51, 99, 50, 56, 40, 99, 68, 99, 0, 99, 68, 51, 49, 40, 40, 50, 50, 50, 99, 55, 52, 0, 0, 50, 52, 48, 99, 47, 44, 40, 48, 61, 40, 52, 38, 47, 53, 66, 40, 48, 40, 19, 99, 48, 52, 99, 48, 56, 16, 55, 47, 60, 99, 33, 40, 58, 40, 43, 99, 57, 99, 40, 54, 52, 99, 99, 71, 51, 99, 40, 51, 59, 99, 48, 40, 48, 99, 60, 93, 40, 53]]


mapped = []
for i in xrange(0,5):
    mapped.append(map(lambda x: x/16, norm[i]))
print mapped 
 
X = [[4, 3, 2, 3, 3, 2, 2, 3, 3, 5, 4, 6, 3, 2, 4, 3, 3, 2, 3, 4, 3, 3, 2, 2, 4, 3, 2, 4, 3, 3, 1, 3, 6, 5, 2, 4],
     [3, 5, 3, 2, 3, 2, 3, 4, 3, 3, 3, 5, 4, 2, 3, 2, 3, 5, 3, 2, 2, 3, 3, 3, 3, 3, 2, 2, 3, 5, 3, 3, 3, 3, 2, 3],
     [3, 3, 2, 3, 2, 1, 2, 2, 5, 3, 3, 3, 2, 2, 3, 4, 1, 3, 3, 3, 3, 3, 2, 2, 6, 3, 2, 3, 4, 2, 2, 3, 3, 3, 2, 3],
     [6, 4, 2, 3, 3, 2, 2, 3, 2, 6, 3, 3, 3, 2, 6, 4, 3, 3, 3, 6, 3, 2, 2, 2, 6, 3, 2, 6, 3, 3, 0, 6, 3, 3, 2, 4],
     [6, 3, 2, 6, 3, 3, 2, 3, 3, 3, 6, 3, 3, 2, 6, 4, 6, 0, 6, 4, 3, 3, 2, 2, 3, 3, 3, 6, 3, 3, 0, 0, 3, 3, 3, 6]]
       
for i in xrange(0,5):
    for j in xrange(0,90):
        mapped[i][j] = colors_rgb[mapped[i][j]]

fig = plt.figure()
ax = fig.add_subplot(111)
ax.imshow(mapped, cmap=cm.jet, interpolation='nearest')

numrows, numcols = 5, 90
def format_coord(x, y):
    col = int(x+0.5)
    row = int(y+0.5)
    if col>=0 and col<numcols and row>=0 and row<numrows:
        z = mapped[row,col]
        return 'x=%1.4f, y=%1.4f, z=%1.4f'%(x, y, z)
    else:
        return 'x=%1.4f, y=%1.4f'%(x, y)

ax.format_coord = format_coord


plt.savefig('heatmap_final_redo.png')
plt.show()